@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@using StickerFire.Models;
@using Microsoft.AspNetCore.Identity;
@model StickerFire.Models.MegaViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    Layout = "_Layout";
}


<div class="container">
    <div class="row">
        <div class="col-lg-2 login">
            <form asp-action= "Login" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
                <h2>Login</h2>
                <label asp-for=LoginViewModel.Email>Email</label>
                <input asp-for=LoginViewModel.Email />
                <br />
                <label asp-for=LoginViewModel.Password>Password</label>
                <input asp-for=LoginViewModel.Password />
                <br />

                <button type="submit">Login</button>
            </form>
        </div>
        </div>

    <div class="row">
        <div class="col-lg-2">
            <form asp-action="Register" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
                <h2>Register</h2>
                <label asp-for="RegisterViewModel.Email">Email</label>
                <input asp-for="RegisterViewModel.Email" />
                <span asp-validation-for="RegisterViewModel.Email"></span>
                <br />

                <label asp-for="RegisterViewModel.Password">Password</label>
                <input asp-for="RegisterViewModel.Password" />
                <span asp-validation-for="RegisterViewModel.Password"></span>
                <br />

                <label asp-for="RegisterViewModel.ConfirmPassword">Confirm Password</label>
                <input asp-for="RegisterViewModel.ConfirmPassword" />
                <span asp-validation-for="RegisterViewModel.ConfirmPassword"></span>
                <br />

                <button type="submit">Register</button>
            </form>
        </div>
        </div>
    </div>
<div class="col-md-6 col-md-offset-2">
    <section>
        <h4>Use another service to log in.</h4>
        <hr />
        @{
            var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
            if (loginProviders.Count == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                        for details on setting up this ASP.NET application to support logging in via external services.
                    </p>
                </div>
            }
            else
            {
                <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in loginProviders)
                            {
                                <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
                            }
                        </p>
                    </div>
                </form>
            }
        }
    </section>
</div>









